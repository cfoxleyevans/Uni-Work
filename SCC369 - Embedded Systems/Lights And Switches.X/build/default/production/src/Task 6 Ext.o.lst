MPASM 5.53                    TASK 6 EXT.ASM   11-21-2013  0:48:11         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 #include "p16f84a.inc"
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F84A processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      00208         LIST
                      00002 
                      00003 ; CONFIG
                      00004 ; __config 0xFFF3
2007   3FF3           00005  __CONFIG _FOSC_EXTRC & _WDTE_OFF & _PWRTE_ON & _CP_OFF
                      00006 
                      00007 ;variable definitions
  00000010            00008 VALA       EQU 0x10
  00000011            00009 COUNTER1   EQU 0x11
  00000012            00010 COUNTER2   EQU 0x12
                      00011 
                      00012 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00013 ; INIT                                                                ;
                      00014 ; This section of code is where any pre program setup is done         ;
                      00015 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0000                  00016 INIT:
0000   1683           00017     BSF     STATUS, RP0 ;move to bank 1
                      00018 
0001   30FF           00019     MOVLW   0XFF        ;set the switches for input
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0002   0085           00020     MOVWF   TRISA
                      00021 
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0003   0186           00022     CLRF    TRISB       ;set the lights for output
                      00023 
0004   1283           00024     BCF     STATUS, RP0 ;move to bank 0
                      00025 
                      00026 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00027 ; MAIN                                                                ;
                      00028 ; This is the main entry point of the application                     ;
                      00029 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0005                  00030 MAIN:
0005   2006           00031     CALL    KNIGHT
                      00032 
                      00033 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00034 ; KNIGHT                                                                ;
                      00035 ; This is the block of code that controls                     ;
                      00036 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0006                  00037 KNIGHT:
0006   1003           00038     BCF     STATUS, C
0007   3001           00039     MOVLW   b'00000001'
0008   0086           00040     MOVWF   PORTB
                      00041 
0009   3007           00042     MOVLW   d'07'       ;set how many stop to move
MPASM 5.53                    TASK 6 EXT.ASM   11-21-2013  0:48:11         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A   0090           00043     MOVWF   VALA
000B   2028           00044     CALL    UP          ;move up the lights
                      00045 
000C   3007           00046     MOVLW   d'07'       ;set how many stops to move
000D   0090           00047     MOVWF   VALA
000E   202F           00048     CALL    DOWN        ;move down the lights
                      00049 
000F   2012           00050     CALL IN_OUT
                      00051 
0010   2012           00052     CALL IN_OUT
                      00053 
0011   2806           00054     GOTO KNIGHT
                      00055 
                      00056 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00057 ; IN_OUT                                                               ;
                      00058 ; This subroutine is replicate the in out movment of kitts lights      ;
                      00059 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0012                  00060 IN_OUT:
0012   3018           00061     MOVLW   b'00011000'
0013   0086           00062     MOVWF   PORTB
                      00063 
0014   2036           00064     CALL WAIT
                      00065 
0015   3024           00066     MOVLW   b'00100100'
0016   0086           00067     MOVWF   PORTB
                      00068 
0017   2036           00069     CALL WAIT
                      00070 
0018   3022           00071     MOVLW   b'0100010'
0019   0086           00072     MOVWF   PORTB
                      00073 
001A   2036           00074     CALL WAIT
                      00075 
001B   3081           00076     MOVLW   b'10000001'
001C   0086           00077     MOVWF   PORTB
                      00078 
001D   2036           00079     CALL WAIT
                      00080 
001E   3022           00081     MOVLW   b'0100010'
001F   0086           00082     MOVWF   PORTB
                      00083 
0020   2036           00084     CALL WAIT
                      00085 
0021   3024           00086     MOVLW   b'00100100'
0022   0086           00087     MOVWF   PORTB
                      00088 
0023   2036           00089     CALL WAIT
                      00090 
0024   3018           00091     MOVLW   b'00011000'
0025   0086           00092     MOVWF   PORTB
                      00093 
0026   2036           00094     CALL WAIT
                      00095 
MPASM 5.53                    TASK 6 EXT.ASM   11-21-2013  0:48:11         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0027   0008           00096     RETURN
                      00097 
                      00098 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00099 ; UP                                                                  ;
                      00100 ; This subroutine is used to wrap moving the light up the board       ;
                      00101 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0028                  00102 UP:
0028   2036           00103     CALL    WAIT        ;have the processor stall
0029   202D           00104     CALL    SHIFT_UP    ;move the bit
002A   0B90           00105     DECFSZ  VALA, F     ;see if we have finished the cycle
002B   2828           00106     GOTO    UP          ;loop
002C   0008           00107     RETURN
                      00108 
                      00109 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00110 ; SHIFT_UP                                                            ;
                      00111 ; This subroutine is used to create a SLL style function              ;
                      00112 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
002D                  00113 SHIFT_UP:
002D   0D86           00114     RLF     PORTB, F    ;shift the 1 up
002E   0008           00115     RETURN
                      00116 
                      00117 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00118 ; DOWN                                                                ;
                      00119 ; This subroutine is used to wrap moving the light down the board     ;
                      00120 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
002F                  00121 DOWN:
002F   2036           00122     CALL    WAIT        ;have the processor stall
0030   2034           00123     CALL    SHIFT_DOWN  ;move the bit
0031   0B90           00124     DECFSZ  VALA, F     ;see if we have finished the cycle
0032   282F           00125     GOTO    DOWN        ;loop
0033   0008           00126     RETURN
                      00127 
                      00128 
                      00129 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00130 ; SHIFT_DOWN                                                          ;
                      00131 ; This subroutine is used to create a SRL style function              ;
                      00132 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0034                  00133 SHIFT_DOWN:
0034   0C86           00134     RRF     PORTB, F    ;shift the 1 down
0035   0008           00135     RETURN
                      00136 
                      00137 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                      00138 ; WAIT                                                                ;
                      00139 ; This subroutine causes the processor to stall for a short period    ;
                      00140 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
0036                  00141 WAIT:
0036   3060           00142     MOVLW   0x60        ;store 255 in both of the counters
0037   0091           00143     MOVWF   COUNTER1
0038   0091           00144     MOVWF   COUNTER1
                      00145 
0039   283A           00146     GOTO    LOOP1       ;go into the first loop
003A                  00147 LOOP1:
003A   0B91           00148     DECFSZ  COUNTER1, F ;decrement the loop counter untill it gets to 0
MPASM 5.53                    TASK 6 EXT.ASM   11-21-2013  0:48:11         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

003B   283D           00149     GOTO    LOOP2       ;move into the second loop
                      00150 
003C   0008           00151     RETURN              ;return the the point where the wait sub was called
003D                  00152 LOOP2:
003D   0B92           00153     DECFSZ  COUNTER2, F ;decrement the loop counter untill it gets to 0
003E   283D           00154     GOTO    LOOP2       ;loop around
003F   283A           00155     GOTO    LOOP1       ;go back to the first loop
                      00156 
                      00157     END
MPASM 5.53                    TASK 6 EXT.ASM   11-21-2013  0:48:11         PAGE  5


SYMBOL TABLE
  LABEL                             VALUE 

C                                 00000000
COUNTER1                          00000011
COUNTER2                          00000012
DC                                00000001
DOWN                              0000002F
EEADR                             00000009
EECON1                            00000088
EECON2                            00000089
EEDATA                            00000008
EEIE                              00000006
EEIF                              00000004
F                                 00000001
FSR                               00000004
GIE                               00000007
INDF                              00000000
INIT                              00000000
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IN_OUT                            00000012
IRP                               00000007
KNIGHT                            00000006
LOOP1                             0000003A
LOOP2                             0000003D
MAIN                              00000005
NOT_PD                            00000003
NOT_RBPU                          00000007
NOT_TO                            00000004
OPTION_REG                        00000081
PCL                               00000002
PCLATH                            0000000A
PORTA                             00000005
PORTB                             00000006
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBIE                              00000003
RBIF                              00000000
MPASM 5.53                    TASK 6 EXT.ASM   11-21-2013  0:48:11         PAGE  6


SYMBOL TABLE
  LABEL                             VALUE 

RD                                00000000
RP0                               00000005
RP1                               00000006
SHIFT_DOWN                        00000034
SHIFT_UP                          0000002D
STATUS                            00000003
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
TMR0                              00000001
TMR0IE                            00000005
TMR0IF                            00000002
TRISA                             00000085
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISB                             00000086
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
UP                                00000028
VALA                              00000010
W                                 00000000
WAIT                              00000036
WR                                00000001
WREN                              00000002
WRERR                             00000003
Z                                 00000002
_CONFIG                           00002007
_CP_OFF                           00003FFF
_CP_ON                            0000000F
_DEVID1                           00002006
_FOSC_EXTRC                       00003FFF
_FOSC_HS                          00003FFE
_FOSC_LP                          00003FFC
_FOSC_XT                          00003FFD
_HS_OSC                           00003FFE
_IDLOC0                           00002000
_IDLOC1                           00002001
_IDLOC2                           00002002
_IDLOC3                           00002003
_LP_OSC                           00003FFC
_PWRTE_OFF                        00003FFF
_PWRTE_ON                         00003FF7
_RC_OSC                           00003FFF
MPASM 5.53                    TASK 6 EXT.ASM   11-21-2013  0:48:11         PAGE  7


SYMBOL TABLE
  LABEL                             VALUE 

_WDTE_OFF                         00003FFB
_WDTE_ON                          00003FFF
_WDT_OFF                          00003FFB
_WDT_ON                           00003FFF
_XT_OSC                           00003FFD
__16F84A                          00000001


MEMORY USAGE MAP ('X' = Used,  '-' = Unused)

0000 : XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX
2000 : -------X-------- ---------------- ---------------- ----------------

All other memory blocks unused.

Program Memory Words Used:    64
Program Memory Words Free:   960


Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     2 reported,     0 suppressed

